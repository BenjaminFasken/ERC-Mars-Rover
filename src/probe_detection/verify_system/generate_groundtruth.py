import json
import re
from pathlib import Path

# Ground truth data from the provided Excel-like document
ground_truth_data = {
    "image_001": [
        {"probe": 1, "x": 61, "y": -42},
        {"probe": 2, "x": 61.5, "y": 90.5},
        {"probe": 3, "x": 37, "y": -89.5},
        {"probe": 4, "x": 35.5, "y": 34.5},
        {"probe": 5, "x": 4, "y": -36.5}
    ],
    "image_002": [
        {"probe": 1, "x": 68.5, "y": 28},
        {"probe": 2, "x": 41, "y": 58.5},
        {"probe": 3, "x": 19, "y": -68},
        {"probe": 4, "x": -3, "y": 19},
        {"probe": 5, "x": -32.5, "y": -37}
    ],
    "image_003": [
        {"probe": 1, "x": 69, "y": -74.5},
        {"probe": 2, "x": 56, "y": 34.5},
        {"probe": 3, "x": 29.5, "y": 15.5},
        {"probe": 4, "x": 25.5, "y": 91},
        {"probe": 5, "x": -19.5, "y": -15.5}
    ],
    "image_004": [
        {"probe": 1, "x": 39, "y": 53},
        {"probe": 2, "x": 15.5, "y": -37},
        {"probe": 3, "x": -11, "y": -63.5},
        {"probe": 4, "x": -24, "y": 26.5},
        {"probe": 5, "x": -38, "y": -23.5}
    ],
    "image_005": [
        {"probe": 1, "x": 34.5, "y": 49},
        {"probe": 2, "x": 9.5, "y": -16},
        {"probe": 3, "x": -17.5, "y": -36},
        {"probe": 4, "x": -11, "y": 60},
        {"probe": 5, "x": -36.5, "y": -16}
    ],
    "image_006": [
        {"probe": 1, "x": 48.5, "y": -74},
        {"probe": 2, "x": 27.5, "y": -22},
        {"probe": 3, "x": 18.5, "y": 41.5},
        {"probe": 4, "x": -8, "y": -40},
        {"probe": 5, "x": -19, "y": 19.5}
    ],
    "image_007": [
        {"probe": 1, "x": 76, "y": 97},
        {"probe": 2, "x": 58, "y": -7},
        {"probe": 3, "x": 33, "y": -72},
        {"probe": 4, "x": 23, "y": 37},
        {"probe": 5, "x": -25, "y": -11.5}
    ],
    "image_008": [
        {"probe": 1, "x": 62, "y": 42.5},
        {"probe": 2, "x": 31, "y": 41},
        {"probe": 3, "x": 4.5, "y": -75},
        {"probe": 4, "x": -5, "y": -18},
        {"probe": 5, "x": -30, "y": 23}
    ],
    "image_009": [
        {"probe": 1, "x": 57.5, "y": -83},
        {"probe": 2, "x": 45.5, "y": 66.5},
        {"probe": 3, "x": 28, "y": 48},
        {"probe": 4, "x": 13, "y": -19},
        {"probe": 5, "x": -4.5, "y": -18.5}
    ],
    "image_010": [
        {"probe": 1, "x": 70, "y": -90.5},
        {"probe": 2, "x": 45, "y": -70},
        {"probe": 3, "x": 27, "y": 14},
        {"probe": 4, "x": 9.5, "y": 53},
        {"probe": 5, "x": -36.5, "y": -28.5}
    ]
}

# YOLO bounding box data from the provided .txt files
yolo_annotations = [
    {
        "filename": "image_001_png.rf.3c0a4b3c6682c1cc68d087ce753cf4b0.txt",
        "bboxes": [
            [0, 0.673734375, 0.6190555555555556, 0.09746874999999999, 0.07672222222222223],
            [0, 0.36309375, 0.5211666666666667, 0.06546874999999996, 0.05027777777777784],
            [0, 0.8147343749999999, 0.49802777777777774, 0.022328124999999942, 0.04363888888888883],
            [0, 0.220984375, 0.47750000000000004, 0.05357812500000001, 0.04233333333333336],
            [0, 0.6179375, 0.4623055555555556, 0.04539062499999993, 0.03836111111111112]
        ]
    },
    {
        "filename": "image_002_png.rf.ad0e93a25a0d09be983a6ff68b216719.txt",
        "bboxes": [
            [0, 0.78125, 0.8736666666666666, 0.09078124999999995, 0.22883333333333333],
            [0, 0.381328125, 0.6666666666666666, 0.11384375000000002, 0.05555555555555555],
            [0, 0.772328125, 0.5456388888888889, 0.09078125000000004, 0.07011111111111114],
            [0, 0.287203125, 0.5013333333333333, 0.07589062499999999, 0.03438888888888888],
            [0, 0.420015625, 0.4550277777777778, 0.05579687500000001, 0.026444444444444395]
        ]
    },
    {
        "filename": "image_003_png.rf.c6a4f97ba89ab3c7d371e2000f248444.txt",
        "bboxes": [
            [0, 0.580734375, 0.7222222222222222, 0.07515625000000004, 0.12697222222222224],
            [0, 0.13653125, 0.5555555555555556, 0.04835937499999998, 0.037027777777777736],
            [0, 0.435265625, 0.5231388888888889, 0.056546874999999906, 0.0595277777777778],
            [0, 0.38615625, 0.46825, 0.07292187499999998, 0.026444444444444395],
            [0, 0.702375, 0.44377777777777777, 0.04612499999999997, 0.027777777777777776]
        ]
    },
    {
        "filename": "image_004_png.rf.9e0805057d2c849c37266d9a22c4ae83.txt",
        "bboxes": [
            [0, 0.687125, 0.9126944444444445, 0.17634375000000002, 0.17461111111111116],
            [0, 0.29725, 0.7857222222222222, 0.154015625, 0.11638888888888882],
            [0, 0.83965625, 0.672611111111111, 0.13467187500000008, 0.0463055555555556],
            [0, 0.64546875, 0.5628333333333333, 0.03200000000000003, 0.08069444444444447],
            [0, 0.30096875, 0.5198333333333333, 0.039437500000000014, 0.052916666666666695]
        ]
    },
    {
        "filename": "image_005_png.rf.bea747a56c822c487ebd15ba8851eea4.txt",
        "bboxes": [
            [0, 0.62165625, 0.9054166666666666, 0.1540156249999999, 0.18916666666666673],
            [0, 0.18378125, 0.7017222222222222, 0.10267187499999997, 0.06480555555555559],
            [0, 0.697546875, 0.6891666666666667, 0.08407812500000009, 0.10052777777777777],
            [0, 0.559890625, 0.5912777777777778, 0.05878125000000001, 0.08730555555555558],
            [0, 0.314734375, 0.5218333333333334, 0.05357812500000003, 0.04894444444444446]
        ]
    },
    {
        "filename": "image_006_png.rf.a0161a613c1961ef0c0c731fbf6c6430.txt",
        "bboxes": [
            [0, 0.357890625, 0.75925, 0.04464062499999999, 0.16402777777777772],
            [0, 0.704984375, 0.6521111111111111, 0.12128125000000001, 0.07936111111111109],
            [0, 0.3203125, 0.5661388888888889, 0.09151562499999999, 0.039694444444444504],
            [0, 0.576640625, 0.5317500000000001, 0.01637500000000003, 0.07672222222222223],
            [0, 0.727671875, 0.4708888888888889, 0.06845312500000009, 0.039694444444444504]
        ]
    },
    {
        "filename": "image_007_png.rf.b152dc449a51b74f78679936101b3ac0.txt",
        "bboxes": [
            [0, 0.560640625, 0.7731388888888888, 0.08854687499999994, 0.1626944444444445],
            [0, 0.341515625, 0.5628333333333333, 0.019343749999999993, 0.0595277777777778],
            [0, 0.750375, 0.5046388888888889, 0.03348437499999992, 0.05422222222222217],
            [0, 0.514875, 0.46825, 0.03125, 0.04497222222222222],
            [0, 0.22917187499999997, 0.44972222222222225, 0.01637500000000003, 0.04233333333333336]
        ]
    },
    {
        "filename": "image_008_png.rf.7fa51558609692f03fbab8818dceed7c.txt",
        "bboxes": [
            [0, 0.31659375, 0.8723611111111111, 0.134671875, 0.11508333333333319],
            [0, 0.5703125, 0.6567500000000001, 0.06174999999999997, 0.08861111111111104],
            [0, 0.84375, 0.5978888888888889, 0.11904687500000008, 0.06083333333333327],
            [0, 0.342265625, 0.5363888888888889, 0.07142187499999997, 0.06747222222222228],
            [0, 0.3742500000000001, 0.4708888888888889, 0.06546875, 0.026444444444444395]
        ]
    },
    {
        "filename": "image_009_png.rf.2cfd8306c2d5ac535ddcfed4d796ce95.txt",
        "bboxes": [
            [0, 0.57440625, 0.65475, 0.04315625000000001, 0.10052777777777777],
            [0, 0.57440625, 0.5780555555555555, 0.09078125000000004, 0.023805555555555538],
            [0, 0.30840625, 0.5429999999999999, 0.03348437500000001, 0.05422222222222217],
            [0, 0.26971875, 0.4993333333333333, 0.015625, 0.04894444444444446],
            [0, 0.739953125, 0.4761944444444445, 0.03049999999999997, 0.03175000000000002]
        ]
    },
    {
        "filename": "image_010_png.rf.3d7b71b73a1e96442ad2e86733af2fe6.txt",
        "bboxes": [
            [0, 0.72246875, 0.8875555555555555, 0.11756250000000001, 0.22486111111111123],
            [0, 0.24479687499999997, 0.5866388888888889, 0.0625, 0.04363888888888883],
            [0, 0.43639062500000003, 0.5443055555555555, 0.03200000000000003, 0.07538888888888885],
            [0, 0.724703125, 0.48280555555555554, 0.07440625000000001, 0.037027777777777736],
            [0, 0.74703125, 0.4431111111111111, 0.04910937499999992, 0.02911111111111116]
        ]
    }
]

def create_annotation_json(ann_data, gt_data):
    """Create a JSON annotation file from YOLO and ground truth data."""
    # Extract image_id from filename (e.g., image_001)
    match = re.match(r"(image_\d{3})_png\.rf\..*\.txt", ann_data["filename"])
    if not match:
        raise ValueError(f"Invalid filename format: {ann_data['filename']}")
    image_id = match.group(1)

    # Validate bounding boxes and GT data
    if not ann_data["bboxes"]:
        raise ValueError(f"No bounding boxes found for {image_id}")
    if len(ann_data["bboxes"]) != 5:
        raise ValueError(f"Expected 5 bounding boxes for {image_id}, found {len(ann_data['bboxes'])}")
    if len(gt_data[image_id]) != 5:
        raise ValueError(f"Expected 5 GT probes for {image_id}, found {len(gt_data[image_id])}")

    # Create annotation structure
    annotation = {
        "image_id": image_id,
        "probes": []
    }

    # Reverse bounding boxes to match GT order (probe_1 with last bbox, probe_2 with second-to-last, etc.)
    reversed_bboxes = ann_data["bboxes"][::-1]

    # Process each bounding box and ground truth pair
    for idx, (bbox, gt) in enumerate(zip(reversed_bboxes, gt_data[image_id]), 1):
        if gt["probe"] != idx:
            raise ValueError(f"GT probe ID mismatch for {image_id}: expected probe_{idx}, found probe_{gt['probe']}")
        _, center_x, center_y, width, height = bbox
        yolo_bbox = [center_x, center_y, width, height]
        probe = {
            "identifier": f"probe_{idx}",
            "bounding_box": yolo_bbox,
            "ground_truth_coordinates_ground_plane": {
                "x": gt["x"] + 70,
                "y": gt["y"],
                "z": 0.0
            },
            "estimated_coordinates_camera": {"x": None, "y": None, "z": None},
            "transformed_coordinates_ground_plane": {"x": None, "y": None, "z": None}
        }
        annotation["probes"].append(probe)

    return annotation, f"{image_id}_annotation.json"
# Generate and save annotation files
output_dir = Path("src/probe_detection/test/annotations")
output_dir.mkdir(exist_ok=True)

for ann_data in yolo_annotations:
    annotation, filename = create_annotation_json(ann_data, ground_truth_data)
    with open(output_dir / filename, "w") as f:
        json.dump(annotation, f, indent=4)
    print(f"Created {filename}")