# Replace the base image with the new one
FROM nvcr.io/nvidia/isaac-sim:4.5.0

ARG ROS_DISTRO=humble
ARG BASE_FOLDER=/root
ARG ROS_WORKSPACE_NAME=ERC-Mars-Rover
ARG ZED_WORKSPACE_NAME=ros2_zed_ws
ARG CUDA_VERSION=12.1

ARG ZED_SDK_MAJOR=5
ARG ZED_SDK_MINOR=0
ARG ZED_SDK_PATCH=0
ARG DEBIAN_FRONTEND=noninteractive

# Install additional system packages not necessarily in the base image
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3-pip \
    python3-dev \
    libopenblas-dev \
    libopenmpi-dev \
    openmpi-bin \
    openmpi-common \
    gfortran \
    nano \
    libomp-dev && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# ###################################
# ###         Install ROS         ###
# ###################################

# Set up locale
RUN apt-get update && apt-get install -y locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

ENV LANG=en_US.UTF-8
ENV PYTHONIOENCODING=utf-8

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1

# Add ROS 2 repository
RUN apt-get update && apt-get install -y software-properties-common && \
    add-apt-repository universe

RUN apt-get update && apt-get install -y curl && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" > /etc/apt/sources.list.d/ros2.list

# Fix libbrotli1 version conflict and install ROS 2 Humble with dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends --allow-downgrades \
    libbrotli1=1.0.9-2build6 \
    libbrotli-dev \
    libfreetype6-dev \
    libfontconfig1-dev \
    ros-humble-desktop && \
    apt-get install ros-dev-tools -y && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Set LD_LIBRARY_PATH to prioritize system and ROS 2 paths
ENV LD_LIBRARY_PATH=/lib/x86_64-linux-gnu:/opt/ros/humble/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/root/install/zed_components/lib:/root/install/zed_interfaces/lib:/root/install/interfaces/lib:/isaac-sim/exts/isaacsim.ros2.bridge/humble/lib
RUN /bin/bash -c "echo $LD_LIBRARY_PATH"

# Install additional utilities and tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    nano \
    iputils-ping \
    busybox \
    iproute2 \
    zstd \
    wget \
    less \
    cmake \
    curl \
    gnupg2 \
    build-essential \
    python3 \
    python3-pip \
    python3-dev \
    python3-setuptools \
    libusb-1.0-0-dev \
    libspnav-dev \
    libbluetooth-dev \
    libcwiid-dev \
    git \
    python3-rosdep2 \
    kmod && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean


# Cyclone DDS
RUN apt-get update && apt-get install -y ros-humble-rmw-cyclonedds-cpp && rm -rf /var/lib/apt/lists/*
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

# ROS environment setup
RUN echo "source /opt/ros/humble/setup.bash" >> /root/.bashrc


# ###################################
# ###      Install ZED SDK        ###
# ###################################

# Install ZED SDK dependencies and sudo
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    zstd \
    wget \
    libpng16-16 \
    libusb-1.0-0 \
    libjpeg8 \
    libglew-dev \
    libopencv-dev \
    sudo && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Install Python dependencies for ZED Python API
RUN python3 -m pip install --no-cache-dir \
    cython>=0.26 \
    numpy>=1.13 \
    opencv-python \
    pyopengl

# Create a non-root user for ZED SDK installation
RUN useradd -m -s /bin/bash zeduser && \
    echo "zeduser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/zeduser && \
    chmod 0440 /etc/sudoers.d/zeduser

# Download and install ZED SDK 5.0 for Ubuntu 22.04 (AMD64, CUDA 12.1) as non-root user
USER root
WORKDIR /root

RUN wget -q --no-check-certificate -O ZED_SDK_Ubuntu22.run \
    https://download.stereolabs.com/zedsdk/5.0/cu12/ubuntu22 && \
    chmod +x ZED_SDK_Ubuntu22.run && \
    ./ZED_SDK_Ubuntu22.run silent skip_cuda skip_tools skip_samples -- accept || { echo "ZED SDK installation failed"; exit 1; } && \
    rm ZED_SDK_Ubuntu22.run && \
    rm -rf /usr/local/zed/resources/*

# Install ZED Python API
RUN SCRIPT_PATH=$(find /usr/local/zed -name get_python_api.py -print -quit) && \
    if [ -n "$SCRIPT_PATH" ]; then \
        echo "Found get_python_api.py at $SCRIPT_PATH" && \
        python3 "$SCRIPT_PATH"; \
    else \
        echo "get_python_api.py not found, installing pyzed wheel manually" && \
        wget -q --no-check-certificate -O pyzed-5.0-cp310-cp310-linux_x86_64.whl \
            https://download.stereolabs.com/zedsdk/5.0/whl/linux_x86_64/pyzed-5.0-cp310-cp310-linux_x86_64.whl && \
        python3 -m pip install --no-cache-dir pyzed-5.0-cp310-cp310-linux_x86_64.whl && \
        rm -rf pyzed-5.0-cp310-cp310-linux_x86_64.whl; \
    fi

# ROS dependencies
RUN apt-get update && \
    rosdep update && \
    apt-get install -y ros-humble-zed-msgs ros-humble-nmea-msgs ros-humble-geographic-msgs ros-humble-image-transport ros-humble-cob-srvs ros-humble-diagnostic-updater ros-humble-robot-localization ros-humble-point-cloud-transport && \
    rm -rf /var/lib/apt/lists/*

# Set environment variables for ZED SDK
ENV LD_LIBRARY_PATH=/usr/local/zed/lib

# Install cuda
RUN apt-get update && apt-get install -y --no-install-recommends \
    gnupg curl ca-certificates && \
    curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/3bf863cc.pub | gpg --dearmor -o /usr/share/keyrings/cuda-archive-keyring.gpg && \
    echo "deb [signed-by=/usr/share/keyrings/cuda-archive-keyring.gpg] https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/ /" > /etc/apt/sources.list.d/cuda.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends cuda-toolkit-12-1 && \
    rm -rf /var/lib/apt/lists/* && apt-get clean

# Set environment variables for CUDA
ENV CUDA_HOME=/usr/local/cuda-12.1
ENV PATH=$CUDA_HOME/bin:$PATH
ENV LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH

# Create workspace for ROS 2
COPY src/ src/

RUN find src/ -path "*/scripts/*" -type f -exec chmod +x {} \;

# Install zed-ros2 wrapper
RUN git clone --recurse-submodules -b humble-v4.1.4 \
    https://github.com/stereolabs/zed-ros2-wrapper.git \
    src/zed-ros2-wrapper

RUN apt-get update && \
    rosdep update && \
    rosdep install --from-paths src --ignore-src -r -y && \
    rm -rf /var/lib/apt/lists/*

# Copy isaac sim assest into its own workspace
RUN cd ../isaac-sim && \
    mkdir -p assets && \
    cp -r ${BASE_FOLDER}/src/simulation/usd/. assets/ && \
    cp -r ${BASE_FOLDER}/src/simulation/scripts/. assets/


# Build ROS workspace with dynamic CUDA version
RUN /bin/bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && \
colcon build --parallel-workers $(nproc) --symlink-install \
    --event-handlers console_direct+ --base-paths src \
    --packages-skip livox_ros_driver2 probe_detection \
    --cmake-args \
        ' -DCMAKE_BUILD_TYPE=Release' \
        ' -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-${CUDA_VERSION}' \
        ' -DCMAKE_LIBRARY_PATH=/usr/local/cuda-${CUDA_VERSION}/lib64/stubs:/usr/lib/x86_64-linux-gnu' \
        ' -DCMAKE_CXX_FLAGS=\"-Wl,--allow-shlib-undefined\"' \
        ' -DCMAKE_PREFIX_PATH=/usr/local/zed;/opt/ros/humble' \
        ' -DCUDA_VERSION=${CUDA_VERSION}' \
        ' --no-warn-unused-cli'"

# Source the workspace setup file
RUN echo "source /root/install/setup.bash" >> /root/.bashrc

WORKDIR /isaac-sim

ENTRYPOINT ["/bin/bash"]
