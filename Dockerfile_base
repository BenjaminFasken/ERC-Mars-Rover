# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Use the latest version of Jetpack as base image
FROM nvcr.io/nvidia/l4t-jetpack:r36.4.0

ARG ROS_DISTRO=humble
ARG BASE_FOLDER=/root/orin
ARG ROS_WORKSPACE_NAME=ERC-Mars-Rover
ARG ZED_WORKSPACE_NAME=ros2_zed_ws

ARG ZED_SDK_MAJOR=5
ARG ZED_SDK_MINOR=0
ARG ZED_SDK_PATCH=0
ARG L4T_MAJOR=36
ARG L4T_MINOR=4

# Avoid prompts with apt-get
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y cuda-toolkit-12-6 && rm -rf /var/lib/apt/lists/*

# Update apt-get and install necessary packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3-pip \
    python3-dev \
    libopenblas-dev \
    libopenmpi-dev \
    openmpi-bin \
    openmpi-common \
    gfortran \
    nano \
    libomp-dev && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Install pip packages
RUN pip3 install --no-cache-dir setuptools Cython wheel numpy colcon-common-extensions

###################################
###       Install PyTorch       ###
###################################

# Use a wheel from Nvidia instead of building from source
# Check https://developer.download.nvidia.com/compute/redist/jp/v512/pytorch/ for more details
ARG PYTORCH_URL=https://developer.download.nvidia.com/compute/redist/jp/v60/pytorch/torch-2.4.0a0+f70bd71a48.nv24.06.15634931-cp310-cp310-linux_aarch64.whl
ARG PYTORCH_WHL=torch-2.4.0a0+f70bd71a48.nv24.06.15634931-cp310-cp310-linux_aarch64.whl

RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${PYTORCH_URL} -O ${PYTORCH_WHL} && \
    pip3 install --no-cache-dir --verbose ${PYTORCH_WHL} && \
    rm ${PYTORCH_WHL}

###################################
###     Install cuSPARSELt      ###
###################################

ARG cuSPARSELt_URL=https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/arm64/cuda-keyring_1.1-1_all.deb
ARG cuSPARSELt_DEB=cuda-keyring_1.1-1_all.deb

RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${cuSPARSELt_URL} -O ${cuSPARSELt_DEB} && \
    dpkg -i cuda-keyring_1.1-1_all.deb && \
    rm ${cuSPARSELt_DEB} && \
    apt-get update && \
    apt-get -y install libcusparselt0 libcusparselt-dev

###################################
###         Install ROS         ###
###################################

# Update system locale
RUN apt-get update && apt-get install -y locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

ENV LANG=en_US.UTF-8
ENV PYTHONIOENCODING=utf-8

# Set Python3 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1

# 
RUN apt install software-properties-common -y && \
    add-apt-repository universe
    
# Add the ROS 2 GPG key with apt.
RUN apt update && apt install curl -y && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

# Add the repository to your sources list.
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" > /etc/apt/sources.list.d/ros2.list

RUN apt update && apt upgrade -y && \
    apt install ros-humble-desktop -y


# Install utils
RUN apt-get update && apt-get install nano && apt-get install iputils-ping
# Install tools for canbus
RUN apt-get install busybox && apt-get install iproute2 -y
RUN apt-get install -y --no-install-recommends zstd wget less cmake curl gnupg2 \
    build-essential python3 python3-pip python3-dev python3-setuptools libusb-1.0-0-dev -y 
RUN apt-get install libspnav-dev -y && \
    apt-get install libbluetooth-dev -y && \
    apt-get install libcwiid-dev -y
RUN apt-get install git -y && \
    apt-get install python3-rosdep2 -y
RUN  apt-get install kmod

# PIP packages
RUN pip3 install grpcio==1.58.0
RUN pip3 install skrl==1.3.0
RUN pip3 install Jetson.GPIO
RUN pip3 install onnx
RUN pip3 install numpy --upgrade
RUN pip3 install protobuf 
RUN pip3 install requests 
RUN pip3 install --no-cache-dir empy==3.3.4

# Install ZED SDK
RUN /bin/bash -c 'echo "# R${L4T_MAJOR} (release), REVISION: ${L4T_MINOR}" > /etc/nv_tegra_release && \
   apt-get update -y || true && \
   wget -q --no-check-certificate -O ZED_SDK_Linux_JP.run \
   https://download.stereolabs.com/zedsdk/5.0/l4t36.4/jetsons?_gl=1*1951nnm*_gcl_au*ODg0NjAwNjIzLjE3NDIzODE5ODQ. && \
   chmod +x ZED_SDK_Linux_JP.run && ./ZED_SDK_Linux_JP.run -- silent skip_tools && \
   rm -rf /usr/local/zed/resources/* && \
   rm -rf ZED_SDK_Linux_JP.run && \
   rm -rf /var/lib/apt/lists/*'

RUN python3 /usr/local/zed/get_python_api.py

# This symbolic link is needed to use the streaming features on Jetson inside a container
RUN ln -sf /usr/lib/aarch64-linux-gnu/tegra/libv4l2.so.0 /usr/lib/aarch64-linux-gnu/libv4l2.so

# Install ROS dependencies
RUN apt-get update && \
    rosdep update && \
    apt-get install -y ros-humble-zed-msgs ros-humble-nmea-msgs ros-humble-geographic-msgs ros-humble-image-transport ros-humble-cob-srvs ros-humble-diagnostic-updater ros-humble-robot-localization ros-humble-point-cloud-transport && \
    rm -rf /var/lib/apt/lists/*